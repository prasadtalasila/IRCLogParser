Algorithm 1 IRCLogParser

Input: 2006-2015 IRC Ubuntu Logs
Output: Information for Analyzing IRC Ubuntu Channels

1: Extract all nicks on a channel for a year
2: for each user do
3:    Track nick changes through parsing logs
4:    Cluster nicks belonging to same user applying connected components algorithm. 
5:    Track channels visited on a monthly basis
6:    Generate graphs for nickname changes using networkx and Graphviz
7:    Calculate degree distribution with python-igraphs
8:    Find keyword digest
   end for

8: for every nick-directed message(msg) do
9:     Store the message send times(MST) in Channel_Activity.csv with 48, 30 min bins
10:    Employ Channel_Activity.csv to generate Heatmap.png using matplotlib and numpy 
11:    Using MSTs, calculate best expected response time(ERT) for two-user conversation
12:    Utilizing ERT, derive conversation length and conversation refresh time.
13: end for   

14: Use networkx to generate SNA_graph.gexf with #msgs between users(nodes) as edge weights
15: Input SNA_graph.gexf to Gephi for visualization of nodes and edges from 2006-2015


16: for every IRC Ubuntu SNA graph do
17:    Use igraph.community_infomap(edge weight) to obtain a vertexclustering object(VC)
18:    Calculate maximum membership of VC to assign colors to every cluster
19:    Plot VC as Community_structure.png using Cairo and Pycairo bindings.
20: end for




