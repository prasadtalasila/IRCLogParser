=== slank is now known as slank_away
=== hell0 is now known as passby
[00:55] <fishscene> Greetings. I'm using the Ubuntu one client for Mac and I noticed it was not syncing properly. I have it set to sync "Desktop" and "Documents" folders. If I click and drag documents from "Desktop" to my "Documents" folder, Ubuntu one reports that file-sync is up-to-date (It doesn't even try to sync). When I go to "one.ubuntu.com", it reports that I have files on my Desktop, when on my Mac, they do not exist.
[00:56] <fishscene> I tried to check my Mac Ubuntu One client version, but I can't seem to find out that information.
[01:03] <ralsina> mmcc: can you help? ^
[01:04] <fishscene> NVM. Restarted my Mac. :S   Sorry to bother you guys.. rofl.
[11:10] <gatox> good morning!
=== slank_away is now known as slank
=== salgado is now known as salgado-lunch
=== salgado-lunch is now known as salgado
=== slank is now known as slank_away
[20:12] <mattgriffin> ubuntuoneros: stickwithjosh (his screen-illuminated picture) made Business Insider. http://www.businessinsider.com/why-programmers-work-at-night-2013-1
[20:16] <dobey> neat
[20:28] <titoto> What is "key" in the metadata of a node one GET using the Files API?
[20:34] <beuno> titoto, not 100% sure what you're talking about, but my guess is that it's the nodekey
[20:35] <titoto> Yes, that's what I am referring too.. anyway I noticed this is read-only.. I am trying to figure a way to attach a custom id on a file node, doesn't look like it is possible
[20:36] <beuno> titoto, it isn't, no
[20:36] <beuno> metadata is provided by the server and not editable
[20:36] <beuno> titoto, U1DB is probably the best place to use editable metadata
[20:37] <titoto> you mean on the client side?
[20:37] <beuno> titoto, both!
[20:38] <beuno> mattgriffin, fancy that!
[20:38] <beuno> also, hi!
[20:41] <titoto> beuno, what I am trying to resolve is a way to store/get a hash of a file, but I can't use the one supplied by the Files API.. my next idea was to store the hash and the file in a "container", which would work fine enough if I can read only the first few bytes of the content, not the whole content
[20:43] <beuno> titoto, is the file hash not exposed in the api?
[20:43] <beuno> it's calculated server-side
[20:44] <beuno> for each file uploaded
[20:44] <beuno> titoto, you could also make the name of the file the hash  ;)
[20:45] <beuno> or, again, use U1DB separately to store metadata
[20:45] <beuno> upload the file and store your own metadata for it in U1DB
[20:54] <titoto> beuno, yes the file hash is provided by the server, but I transform the content of the file, and I want to have the hash of the file untransformed (the file is encrypted)
[20:54] <beuno> titoto, ah, I see
[20:56] <titoto> there are solutions, I just wanted to see if there was a simpler one, I will fallback on the less simple one
[21:02] <dobey> titoto: but if you change the contents, even after you encrypt it, the contents are different according to the filesystem, and thus the hash would be different for u1. you're trying to subvert that, so that the hash remains the same after? or you want a local reference to the file regardless of the hash?
[21:11] <titoto> dobey, I dont want to interfere with the U1 daemon, I just want to run my version of a sync app that will sync w/ encryption as an option (the encryption kicks in when a parent folder name has .crypt extension). That's something else I wonder, if I can have a volume on U1 which is not managed by the official sync daemon..
[21:15] <dobey> it would be quite confusing for the user to see the folder they have synced with u1, marked as not synced, in the u1 control panel
=== zbir_ is now known as zbir
[22:57] <facundobatista_> ghost facundobatista
[22:57] <facundobatista_> go away, myself!
=== briancurtin2 is now known as briancurtin
