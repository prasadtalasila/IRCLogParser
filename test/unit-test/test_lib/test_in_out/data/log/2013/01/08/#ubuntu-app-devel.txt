[00:33] <jvrbanac> mhall119, you still around?
[00:35] <mhall119> jvrbanac: yup
[00:37] <jvrbanac> sweet! I think I just finished up a rough pass at that diagram. Just sent it via email.
[00:38] <jvrbanac> I ended up stripping out a ton of redundant information when I made the whole thing pretty generic
[00:41] <jvrbanac> I'm not sure if that was exactly what you were looking for.
[00:47] <jvrbanac> mhall119, Woop! I forgot to add a type column on the search_elements table. I figured that since we weren't really rendering the content live, that we could remove the redundancy in the tables for classes, enums, and bitfields
[00:50] <mhall119> jvrbanac: where is this diagram?
[00:50] <jvrbanac> I sent it to your email. Did it not come through?
[00:51] <mhall119> ah, wasn't paying attention to email, let me check
[00:58] <jvrbanac> mhall119, I forgot to mention. I used MySQL Workbench. I wasn't sure what you like to use, but it is free and has a very nice EER modeling tool.
[00:58] <mhall119> jvrbanac: that's fine, I usually use dia, but this works
[00:59] <jvrbanac> Ahh! I'll remember that next time.
[01:00] <mhall119> use whatever you like best
[01:04] <jvrbanac> mhall119, :) I originally had this thing with separate tables for classes, enums, etc, but I figured I would try removing that concept all together to make it more generic. That way it should be flexible enough for most frameworks.
[01:07] <mhall119> don't be more generic that you need to be
[01:07] <mhall119> that's a classic anti-pattern :)
[01:07] <jvrbanac> :) true
[01:13] <jvrbanac> mhall119, Well, if I add back in out the ones I condensed it'll add on five more tables with nearly the same structures. Do you have an opinion either way? Do you think that I made it too generic?
[01:20] <jvrbanac> mhall119, Now that I think about it... I'm missing a few other things now. Crud! Ok... back the the drawing board. Sorry!
[01:21] <mhall119> jvrbanac: no worries, I'm distracted by CES videos right now anyway ;)
[01:22] <jvrbanac> mhall119, lol!
[01:46] <jvrbanac> mhall119, I just sent you an updated version. It's a little less generic and has a few issues fixed.
[01:47] <mhall119> thanks jvrbanac
[01:57] <jvrbanac> mhall119, I'm going to head out for the night. If you have some free time tomorrow, perhaps we can nail down these models.
[01:58] <mhall119> jvrbanac: sounds good, ping me whenever you're around
[01:59] <jvrbanac> mhall119, will do!
[12:16] <mpt> What's the simplest possible code with which I can test a Launcher icon with a number emblem?
[13:25] <dpm> mpt, what sort of test are you thinking of? Perhaps the easiest way, without writing any code, is to run hello-unity: https://launchpad.net/hello-unity
[13:42] <dpm> mpt, or you can run the short Python script with the sample code on http://developer.ubuntu.com/resources/technologies/launcher/
[13:42] <mpt> Thanks dpm. I just want a test to show what the emblem looks like when it is 1, 2, 3, and 4 digits long
[13:44]  * mpt gets the hello-unity code
[13:44] <mpt> AttributeError: 'NoneType' object has no attribute 'scale_simple'
[13:45] <mpt> I guess it would help if I read the README :-)
[13:47] <mpt> Ah, so if the count > 9999 it's rendered as "****"
[13:50] <dpm> yeah, I think I saw someone mentioning that happening in the mail count for the launcher of the gmail webapp a while ago
