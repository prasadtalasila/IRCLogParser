[01:34] <Ethernin> test
[01:34] <SmallFry> You failed your test:P
[01:39] <Ethernin> lol myes
[01:40] <SmallFry> Myes?
[01:41] <Ethernin> mmmmmmmmmmmmyesssssssssss
[01:41] <SmallFry> Oh
[01:41] <Ethernin> SmallFry, what do u use ubuntu-arm on?
[01:42] <SmallFry> Nexus 7
[01:42] <Ethernin> nice me too
[01:42] <SmallFry> Multirom?
[01:42] <Ethernin> any damn luck with the gestures or getting the user interface to be ah...more usable?
[01:43] <Ethernin> I've just got the latest raring image on there, I've recompiled the kernel a couple times with a buddy to get it to do some extra stuff
[01:43] <SmallFry> I installed kde,
[01:43] <Ethernin> yeah i've tried litterally every desktop env
[01:43] <Ethernin> kde was buggy as hell for me
[01:43] <Ethernin> did u install just kde or plasma as well?
[01:43] <SmallFry> Mine was a bit too
[01:43] <SmallFry> Plasma won't show up if i install it via apt get
[01:44] <Ethernin> yeah, i actually found xfce4 to be the most stable and customizable - problem was because it was xfce the touch screen wouldn't work for window titles/min/max/close
[01:44] <SmallFry> Ugh
[01:44] <Ethernin> i was bummed because xfce4 ran really well and really fast on the nexus, plus it's stable as hell
[01:45] <Ethernin> it was just that ONE thing that was a pretty big deal
[01:45] <Ethernin> lubuntu on the other hand worked pretty well
[01:45] <Ethernin> lxde was OK, but also buggy as soon as u tried to resize ANYTHING
[01:46] <Ethernin> I tried gnome class but it was virtually impossible to customize and not enough options for settings
[01:46] <Ethernin> unity is pretty much unusable - soooo damn slow
[01:46] <Ethernin> also had to stop a couple services right off the bat like avahi-daemon and cups
[01:47] <Ethernin> SmallFry, the cool part was I was able to install just about any tool I wanted, but using that touchscreen is a nightmare
[01:47] <SmallFry> I have been running vanilla
[01:47] <SmallFry> I agree
[01:47] <Ethernin> not the same experience as running android on the device...
[01:47] <SmallFry> I'm such a Linus noob thougg
[01:47] <SmallFry> Not at all
[01:47] <Ethernin> I wish they would put a little more development into the interface and touch screen, plus the keyboard also needs some work
[01:48] <Ethernin> but hey, i am happy they released it!
[01:48] <Ethernin> I know youre working hard out there devs!
[01:48] <SmallFry> Aye, had to put the on-screen keyboard button in the corner so I could get it up on unitys search
[01:48] <Ethernin> yeah omg the thing is awefull for the most part
[01:48] <Ethernin> i wish onboard actually was a little more concious of things running
[01:48] <Ethernin> it's definitely getting better
[01:49] <Ethernin> but it's not like in android where the keyboard is built into each app essentially
[01:49] <Ethernin> so when you're using the terminal the keyboard doesnt block the text ect,
[01:51] <SmallFry> Mhm
[01:51] <SmallFry> The on-screen keyboard button actually isn't bad
[01:51] <SmallFry> Just enabled it in the accessibility options
[01:58] <Ethernin> yeah i love the button, just wish it was more application aware
[02:00] <SmallFry> Yep
[02:02] <raster> Ethernin:  keyboard isnt built into apps in android. but it is a standard SERVICE apps are aware of and they "request" either manualyl or as part of the toolkit
[02:05] <Ethernin> raster, cool thanks for the info, so basically it's the apps that are aware of the keyboard, not the keyboard that is aware of the apps?
[02:05] <raster> well its mostly the toolkjit
[02:05] <Ethernin> raster, in ubuntu it's basically the other way around with onboard correct?
[02:05] <raster> eg you place an entry "widget"
[02:05] <raster> and when it is "focuseD" it asks for a kbd service
[02:05] <Ethernin> riiiiiiiiiiiiiiiiiiiiiight
[02:05] <raster> the kbd is in fact a separate window/app/process
[02:06] <Ethernin> so with ubuntu
[02:06] <raster> i think what ubuntu has done is recycle the input method framework to detect something needs input
[02:06] <raster> *BUT*
[02:06] <Ethernin> is it possible to get that same kind of functionality easily?
[02:06] <raster> nmot everything is configured to use it
[02:06] <Ethernin> right
[02:06] <raster> or uses it "right"
[02:06] <raster> and thus it doesnt work for all apps/all toolkits etc. in all cases
[02:07] <Ethernin> yeah, my experience has been when it's been aware it basically triggers on input
[02:07] <Ethernin> hmm,
[02:07] <raster> most linux toolkits are pretty much unaware of vkbds at all
[02:07] <raster> efl i think is a major exception
[02:07] <Ethernin> raster, do you know of any terminals that are aware in such a way?
[02:07] <raster> i dont know about qt
[02:07] <Ethernin> efl?
[02:07] <raster> gtk last i looked didnt really know anything specific
[02:07] <Ethernin> ya
[02:07] <raster> and xterm/rxvt etc. etc. just have no clue
[02:08] <raster> they CAN use input methods
[02:08] <Ethernin> hmm...yeah ive been trying to figure something out
[02:08] <raster> but normally via xim (the old old old input method framework - your scim/uim/whatever will often have an xim bridge)
[02:08] <Ethernin> i love the power of ubuntu and flexibility - but it's pretty hard to use with that touchscreen
[02:08] <raster> tbh - i dont much care myself :)
[02:08] <raster> 1. i use a toolkit that knows about vkbd's and input methods
[02:08] <Ethernin> yeah yeah i hear that alllll the time :)
[02:09] <raster> 2. i have a ui/desktop env that provides vkbd's built-in
[02:09] <raster> 3. i work on both the toolkit and the wm/vkbd/desktop
[02:09] <raster> so i can "make it work"
[02:09] <Ethernin> cool
[02:09] <raster> :)
[02:09] <Ethernin> what toolkit?
[02:09] <raster> whatever other things do... is of just "passing interest" to me. :)
[02:09] <raster> efl
[02:10] <Ethernin> awesome, checking it out!
[02:10] <raster> as efl is what is used in tizen for mobile phones
[02:10] <raster> it has.. support for this stuff
[02:10] <Ethernin> reeeeeeeeallallllllly
[02:10] <raster> touch figner controls/friendliness etc.
[02:10] <Ethernin> that's interesting
[02:10] <Ethernin> DUUUUDE
[02:10] <Ethernin> THANK YOUS!
[02:10] <raster> so just drag to scroll
[02:10] <raster> (and it has momentum/bounces etc.)
[02:10] <raster> well ok - its configurable
[02:10] <Ethernin> ha!
[02:11] <raster> it has "perconalities"
[02:11] <raster> err  personalities
[02:11] <Ethernin> enlightenment foundation libraries
[02:11] <Ethernin> this is hilarious
[02:11] <raster> configure in "standard" mode and u get a littrle scrollbar u drag as normal
[02:11] <raster> and things kinda are desktop-y in the way they behave
[02:11] <raster> copy & paste in entires etc.
[02:11] <Ethernin> dude
[02:11] <Ethernin> omg
[02:11] <raster> if u switch to "mobile" mode
[02:11] <Ethernin> this is EXACTLY what i have been looking for!
[02:11] <raster> it swizzles some config values
[02:11] <Ethernin> wicked!
[02:12] <raster> and then finger drag scrolls, copy & paste/selections behave differently (finger-friendly)
[02:12] <raster> etc.
[02:12] <Ethernin> freakin awesome
[02:12] <Ethernin> dude seriously thank you!
[02:12] <raster> so basically an app can work on both a desktop (mouse+kbd) setup and a touch setup
[02:12] <raster> just by swizzling "system config vlaues"
[02:13] <raster> system confgi also controls scaling ANd sizing of ui elements
[02:13] <raster> ie figner size forces any elemnt u are to "click/touch/press"
[02:13] <SmallFry> Its just an apt get?
[02:13] <raster> and forces it to be a bigger size
[02:13] <SmallFry> Apt-get efl?
[02:13] <raster> ie.. be a "finger in size" so its easy to hit with a finger
[02:13] <Ethernin> wow they even got the domain name "enlightenment.org"
[02:14] <raster> so if on a tocuh ui - just scale up the finger size and its easy to use
[02:14] <raster> if on mouse/kbd - dial down finger size and elemtns size less "fatty" to reflect that a mouse is far more accurate in hitting things
[02:14] <SmallFry> Is it just apt get efl?
[02:14] <raster> it'll dynamically adapt
[02:14] <raster> u'll probably need to find a ppa
[02:14] <raster> and it isnt called "efl" in packages
[02:14] <Ethernin> raster, omg dude this is exactly what i've been trying to find, yeah so do you have to compile from source or is it in the repos?
[02:14] <raster> its split into about a dozen libraries
[02:15] <Ethernin> ok
[02:15] <raster> Ethernin: :)
[02:15] <Ethernin> i've been looking at multitouch and utouch for gestures ect, but this seems like THE TICKET!!!
[02:15] <Ethernin> raster, ^_^
[02:15] <SmallFry> What's a Ppa...
[02:16] <raster> https://launchpad.net/~hannes-janetzek/+archive/enlightenment-svn
[02:16] <Ethernin> wow that was quick!
[02:16] <raster> Ethernin:  also efl supports multitouch
[02:16] <raster> it happens to work out of the box on my n7
[02:16] <raster> tho i did compile efl myself
[02:16] <Ethernin> OMFG
[02:16] <Ethernin> HURRRAY!!!!
[02:16] <raster> and i made sure to enable the xi2.2 support
[02:17] <raster> elementary has a multitouch test
[02:17] <Ethernin> what's the xi2.2 support?
[02:17] <raster> just stick multiple fingers on there
[02:17] <raster> if u get multiple "target points" ttracking all your figners
[02:17] <Ethernin> yeah i saw that, the 3 finger touch
[02:17] <raster> then its working
[02:17] <raster> it works for me
[02:17] <Ethernin> dude
[02:17] <Ethernin> youre my savior man!
[02:17] <raster> there are other gesture tests
[02:17] <Ethernin> "my own personal jesus christ"
[02:17] <raster> eg pinch-to-zoom stuff
[02:17] <Ethernin> "mesculin, it's the only way to fly :)"
[02:18] <raster> theres one test that lets u zoom+rotsate a photo with momentum as u slide it around
[02:18] <Ethernin> this is amazing
[02:18] <Ethernin> i knew there was a way....
[02:18] <raster> some widgets support multitouch out of the box
[02:18] <raster> eg the photocam widget (for displaying big megabgapixel camera photos)
[02:18] <raster> pinch to zoom should work there
[02:18] <Ethernin> yeah, u can triple tap to move windows, but it's flaky at best out of the box
[02:18] <raster> as with the map widget )(can do openstreetmaps and otehr mappign service stuff)
[02:18] <Ethernin> dude i can't tell u how psyched i am now!!!!!!!!!!!!!!!!!!
[02:19] <Ethernin> i wanted the pinch zoom bad too...
[02:19] <raster> xi2.2 == Xinput 2.,2
[02:19] <raster> err xinput 2.2
[02:19] <raster> as of xinput v 2.2 full touch support was added to the xinput layer
[02:19] <raster> "properly"
[02:19] <raster> its supported in efl
[02:19] <Ethernin> riiiight, so there's a conf file for that where you can add custom gestures right?
[02:19] <raster> mostly due to the fact it has mpx support already for xi2.0
[02:20] <raster> and that it is used in tizen which right now is heavily mobile/touch focused and thus gets the attention and work
[02:20] <SmallFry> Ethernin
[02:20] <raster> umm no
[02:20] <raster> no conf file for gestures
[02:20] <raster> gestures are recognised in code
[02:20] <raster> they arent "draw symbol x"
[02:20] <raster> so it isnt a series of points to match
[02:20] <SmallFry> If you get this stuff compiled, shoot it my way would you?
[02:20] <Ethernin> ah
[02:20] <raster> gestures are dynamically tracked
[02:21] <Ethernin> SmallFry, sure thing, I;ll try it out and give u my steps if i get it working!
[02:21] <raster> and literallyu if u write an app and code to handle specific gestures - u register for a gestrure event
[02:21] <Ethernin> interesting
[02:21] <raster> and then AS the gestrues are recognized u are told what is recognized and parameters for it
[02:21] <raster> eg how much you just zoomed with a pinch
[02:21] <SmallFry> Sure:) shoot me a PM anytime
[02:21] <raster> etc.
[02:21] <Ethernin> ok right on
[02:21] <Ethernin> raster man thanks for the clarification, VERY HELPFULL
[02:21] <raster> so its not just "oh he drew a circle"
[02:21] <Ethernin> :P
[02:21] <raster> or "he drew a Z"
[02:22] <raster> its more the swipe/pinch/ etc. style gestures
[02:22] <raster> with 1, 2 or 3 fingers etc.
[02:22] <raster> see gestture layer test in elementary_Test
[02:22] <raster> it shows u gestures i knows of and lights up the ones it recognizes
[02:22] <Ethernin> ok that makes sense
[02:23] <raster> imho recognizing if u "drew a Z" is a whole different class of thing
[02:23] <Ethernin> oh man, ok going to try and get this working!
[02:23] <raster> ie its shape recognition basically
[02:23] <Ethernin> coooool
[02:23] <raster> recognizing some shape u drew
[02:23] <raster> anyway
[02:23] <raster> just fyi :)
[02:23] <raster> play with it as u like
[02:23] <Ethernin> i gotta run but ill be back, raster thanks again man, SmallFry I'll be back trying to get this working on my N7
[02:24] <SmallFry> Ok
[02:24] <Ethernin> oh hellllllllllllllllllllllllllls yeah!
[02:24] <raster> #e if u want to ask
[02:24] <raster> as u'll get more answers there
[02:24] <SmallFry> Thanks
[02:24] <Ethernin> #e?
[02:24] <raster> i should have made some videos
[02:24] <raster> channel
[02:24] <raster> #e
[02:24] <Ethernin> k
[02:24] <Ethernin> wicked
[02:24] <Ethernin> dude seriously thanks much
[02:24] <raster> see the enlightenment.org website
[02:24] <Ethernin> ill be on in a while to mess with this stuff!
[02:24] <raster> info on "contacting" etc.
[02:25] <raster> mailing lists
[02:25] <raster> irc
[02:25] <Ethernin> yeah im checking it out for sutre!
[02:25] <raster> etc.
[02:25] <Ethernin> so dope
[02:25] <Ethernin> later boys!
[02:25] <raster> it also is a lot less heavy than unity
[02:25] <Ethernin> thank the lords
[02:25] <Ethernin> so wait, is it a full desktop env????
[02:25] <raster> after switching to e17 i managed to wipe off about 200-300m of mem usage compared to unity on my n7
[02:25] <raster> yes
[02:25] <Ethernin> holy crap it is!!!
[02:25] <raster> it also is a full desktop env
[02:25] <Ethernin> DAMN
[02:25] <raster> with compositing
[02:25] <raster> both gl and software
[02:25] <Ethernin> dude this is INSANE!
[02:26] <Ethernin> omg, i love u
[02:26] <raster> software comp is fast enough to be usable on my old penitum-m @ 600mhz
[02:26] <Ethernin> hahahahahaa
[02:26] <raster> no gpu there
[02:26] <Ethernin> YESSSSSSSSSSSSSSSSSSSSSSSS
[02:26] <raster> not needed
[02:26] <raster> sure - not silky smooth at all times
[02:26] <Ethernin> ill be back, thanks again!
[02:26] <raster> but usable
[02:26] <Ethernin> --out
[02:26] <raster> gl accel of course works
[02:26] <raster> opengl-es2
[02:26] <raster> etc.
=== zz_chihchun is now known as chihchun
[05:38] <xenome> is there an easy way to change the uboot splash screen with two penguins to something else?  Must I recompile uboot to make that work?
[05:49] <infinity> xenome: That's not uboot, it's the kernel.
[05:51] <xenome> ah, is there a way to change that w/o having to rebuild the kernel?
[05:51] <xenome> does that get pulled from the initramfs?
[05:58] <lilstevie> xenome: it is part of the kernel
[05:59] <lilstevie> and your options are, leave as is, or turn them off
[05:59] <xenome> how can I turn them off? quiet?
[05:59] <lilstevie> recompile the kernel
[06:00] <xenome> oh, ok so no boot option
[06:00] <xenome> bummer
[06:00] <xenome> if I'm going to recompile, should I get the ubuntu source for my kernel or get adventurous and try mainline
[06:00] <xenome> i suppose I'm in a pickle because I need to use the TI kernel for maximum driver support
=== XenGi is now known as XenGi_
=== XorA is now known as XorA|gone
[06:50] <infinity> xenome: We actually remove the penguins on our master kernels, I believe.  You could file a bug asking for that patch to be included in linux-ti-omap4 as well, if you're using Ubuntu's omap4 kernels.
[06:51] <infinity> (At least, I haven't seen a penguin on my x86 framebuffer in years, so I assume we're disabling it... Or we just draw over over it so fast I don't notice)
[07:02] <reisei> Hi, all! I want to ask you about installing ubuntu on the Nexus 7.. Can I install there my own image of ubuntu? Without the installation progress.
[07:09] <Jef91> Does anyone know what is the full list of packages that contain all the 3d drivers for the nexus 7?
[07:18] <lilstevie> nvidia-tegra3?
=== Snark_ is now known as Snark
=== chihchun is now known as zz_chihchun
=== zz_chihchun is now known as chihchun
=== chihchun is now known as zz_chihchun
=== zz_chihchun is now known as chihchun
=== doko_ is now known as doko
=== yofel_ is now known as yofel
[09:44] <reisei> what should contain image file for nexus 7? rootfs?
=== chihchun is now known as zz_chihchun
=== tinti is now known as tinti_
=== tinti_ is now known as tinti__
=== tinti__ is now known as viniciustinti
=== viniciustinti is now known as viniciustinti_
=== viniciustinti_ is now known as viniciustinti__
=== viniciustinti__ is now known as tinti
[13:36] <rigved> hello everyone
[13:38] <rigved> I have installed ubuntu on my Nexus 7 32 GB. But it shows that disk space for "/" is only 6 GB. Have I installed the wrong image? I have used the Desktop Installer to install the image automatically to my Nexus 7.
[13:39] <ogra_> no, you havent, we dont offer specific images for the differently sized devices yet
[13:39] <ogra_> so currently the image for 8G is the one used on all devices
[13:41] <rigved> ogra_: oh. ok. is there any way to use the remaining space? maybe by creating a new partition?
[13:44] <ogra_> you could repackage the image before flashing, but there is a high risk that fastboot will corrupt it while flashing
[13:46] <brendand> xnox, ogra_ - is there a bug number for ubiquity not accepting text entry on the user details screen?
[13:46] <ogra_> xnox, bug 1093050
[13:46] <hrw> ogra_: can't you repartition emmc?
[13:46] <ubot2> Launchpad bug 1093050 in ubuntu-nexus7 "OnBoard doesn't work on text boxes during initial setup" [Medium,Incomplete] https://launchpad.net/bugs/1093050
[13:46] <ogra_> hrw, nope
[13:47] <hrw> ogra_: but that's still emmc?
[13:47] <ogra_> hrw, the GPT is hardcoded in the bootloader, the bootloader is a signed blob we cant replace
[13:47] <hrw> o fsck
[13:47] <hrw> ogra_: fsresize possible?
[13:48] <ogra_> you can resize them, but then you get massive FS errors
[13:48] <brendand> ogra_, for me onboard appears but typing does nothing
[13:48] <ogra_> i tried that when rolling the first images
[13:48] <ogra_> brendand, right, a reboot should fix that
[13:48] <ogra_> there is some kind of race on the first boot or so
[13:49] <ogra_> which doesnt seem to show up on subsequent boots into the installer
[13:49] <brendand> ogra_, ah strange
[13:50] <ogra_> well, metacity worked fine, the bug started showing with the switch to compiz
[13:50] <brendand> lovely compiz
[13:58] <ogra_> xnox, seen that ? https://bugzilla.redhat.com/show_bug.cgi?id=859373 ... http://lists.fedoraproject.org/pipermail/package-announce/2012-November/090998.html ?
[13:58] <ubot2> bugzilla.redhat.com bug 859373 in ntfs-3g "Danger in dual booting Windows 8 and Linux" [High,Closed: errata]
[13:59] <ogra_> seems ntfs3g needs a fix
[13:59] <rigved> ogra_: ok thanks
[14:01] <rigved> btw, i did experience the same problem with ubiquity nt accepting text entry in the oem setup screen
[14:01] <xnox> ogra_: yes, we did add a similar erratra for wubi & quantal. I think we might be recent enough as we do bail out at mounting windows8 (hence the complaints)
[14:02] <rigved> i was able to reproduce the error
[14:02] <ogra_> xnox, ah, k, i just saw a news article from today that claimed we dont have the fix in ubuntu and debian
[14:02] <xnox> ogra_: not sure now, I'll double check and cherry pick as well if we are missing that bit.
[14:02] <xnox> ogra_: i'll ping you when I check.
[14:02] <rigved> just selecting "Show Password" in the wifi setup screen would bring the problem. after selecting "Show Password", onscreen would not work. reboot was needed.
[14:03] <Rjs> would it be possible to use e.g. LVM on the partition to split it into one filesystem for the original image and another that is created on the first boot or so? hmm, or could the ubuntu installer load itself into RAM and create the actual file system while installing instead of having a premade fs image? (just speculating here...)
[14:03] <ogra_> xnox, the last upload was in sep. 2012 ... i doubt it has the fix
[14:03] <xnox> yeah.
[14:04] <ogra_> heh, seems FAT has the same issue on win8 ... but no way to determine if the FS is unclean or not ...
[14:06] <ogra_> Rjs, how would having the installer in ram help ?
[14:06] <ogra_> ... if you cant change the partitioning :)
[14:06] <ogra_> Rjs, we were pondering LVM, but thats kind of a hack
[14:06] <Rjs> ogra_: then the installer could create a full-size filesystem from scratch on the actual device, so it would just use whatever size partition the device has?
[14:07] <ogra_> (vs properly having a single partition across the whole MMC)
[14:07] <ogra_> Rjs, see above, hardcoded partition table
[14:07] <ogra_> you cant really change it
[14:07] <Rjs> ogra_: hmm, does it have a hardcoded 8gb partition on all of the devices?
[14:07] <ogra_> no
[14:07] <ogra_> it has a 6G partition as "userdata" on the 8G device
[14:08] <ogra_> all other devices have bigger userdata partitions
[14:08] <ogra_> 6G is the smalles common denominator across all devices
[14:09] <Rjs> ogra_: so if the installer loaded itself into RAM, could it then use mkfs to create the filesystem on the userdata partition (and, say, extract a tar to it to have the initial contents of the file system)?
[14:10] <Rjs> ogra_: then the mkfs on the installer could select the filesystem size based on the size of th userdata partition on the actual device that it is currently installing to?
[14:10] <ogra_> no
[14:10] <ogra_> partitions formatted from the initrd (or wherever you sit in ram) end up with a broken filesystem that loses data over time
[14:11] <ogra_> you filesystem has to be created by the android mkfs
[14:11] <ogra_> (we spent about a week to come up with the cleanest way that doesnt eat your data when we designed the image type)
[14:12] <ogra_> what you can do, and what the usb-creator installation will do, is repacking the image before flashing top the right size using the android-fstools
[14:12] <Rjs> ogra_: oh, sorry, I didn't know that... is it because of some sort of android kernel oddity? (the userdata partition is not just a standard block device where the OS can write whatever data it wants to?)
[14:13] <ogra_> it is because of the GPT partition table that is hardcoded in the bootloader
[14:14] <ogra_> it is hard to tell what exactly is the issue sinbce the whole bootloader is a big binary blob
=== zz_chihchun is now known as chihchun
[14:14] <ogra_> and you cant replace it
[14:15] <Rjs> ogra_: hmm, but after the kernel gets loaded, /dev/mmcblk0p3 (or whatever number the userdata partition has) isn't just a block device that you could access from the initrd to create whatever filesystem you want there?
[14:16] <Rjs> or does the bootloader need something special written on the userdata partition? (so you couldn't for example use a completely different filesystem type for it?)
[14:16] <ogra_> it is, but filesystems created with standard fs tools fail
[14:16] <ogra_> feel free to research it :)
[14:17] <Rjs> hmm, I could try if/when I get the time :) (I just recently bought a nexus7 for testing, but haven't yet had time to install anything on it)
[14:17] <ogra_> working images can be created using the make_ext4fs tool from android-fsutils ... the source code is there, you could research what the mkfs dpoes differently from a normal mkfs :)
[14:18] <ogra_> we used to use the "format from ram" approach in the preinstalled pandaboard images we had earlier
[14:20] <Rjs> ogra_: hmm, ok... maybe I'll try to look into it if I get the time and energy (probably not in a while)... thanks for the information :)
[15:18] <marvin24> jay, https://launchpad.net/~marvin24/+archive/tegrarcm
[15:19]  * marvin24 celebrates his first package
[15:20]  * ogra_ applauds 
[15:20] <ogra_> congrats !
[15:21] <marvin24> ogra_: now tell me how to build it for different ubuntu releases ;-)
[15:21] <ogra_> you need to change the changelog ...
[15:21] <ogra_> and re-upload for each release (after rolling a fresh source package indeed)
[15:21] <Tassadar> cg :) does whoopsie (or how is that "Error occured, send report" thing called) produce logs?
[15:22] <ogra_> apport does, whoopsie just commits them
[15:22] <marvin24> ogra_: ok, I hoped that would be more easy using some launchpad interface
[15:22] <ogra_> in /var/crash/
[15:22] <ogra_> there might be an easy way i dont use :)
[15:22] <Tassadar> because something crashes on my n7, so that this window shows up pretty frequently
[15:23]  * Tassadar is looking to /var/crash
[15:23] <ogra_> the .crasdh files in /var/crash have pretty recognizable names
[15:23] <Tassadar> yeah
[15:23] <Tassadar> dbus a cups
[15:24] <Tassadar> *and
[15:28] <Tassadar> cups' error log says that some ssl keys are missing http://pastebin.com/rQfak24W Oo
[15:37] <Tassadar> seems that "make-ssl-cert generate-default-snakeoil" in /etc/ssl/certs fixed it
=== tinti is now known as maluta
[15:39] <Tassadar> can somebody confirm that this is happens for all n7's? I mean the "System error occured" window with "report" option?
=== maluta is now known as tinti
[15:41] <ogra_> if something crashes it should happen on all n7's
[15:41] <ogra_> happens on your desktop too :)
[15:42] <Tassadar> well i am multi-booting it, it _may_ be because of that, but I don't think so
[15:42] <Tassadar> anyway, if I won't find bug report about this, I'll create one
=== tinti is now known as maluta
[15:43] <ogra_> just click report :)
[15:43] <Tassadar> gksudo
[15:43] <Tassadar> plus, when I managed to somehow type my password in, the report process crashes :x
[15:44] <Tassadar> well, not crashes, "fails" or something
[15:44] <ogra_> gksudo ?
[15:44] <ogra_> i dont unbderstand
[15:45] <Tassadar> unable to enter password to gksudo
[15:45] <ogra_> gksudo shouldnt be used by anything on the desktop
[15:45] <Tassadar> it like "disables" rest of the screen, including the keyboard
[15:45] <ogra_> if it pops up *anywhere* thats a bug
[15:46] <ogra_> apps needing admin privs need to use pkexec
[15:46] <ogra_> which doesnt have such issues
[15:46] <Tassadar> well, I am not sure it is gksudo, i just can't enter anything and it is exatly like https://bugs.launchpad.net/ubuntu-nexus7/+bug/421660
[15:46] <ubot2> Launchpad bug 421660 in ubuntu-defaults-nexus7 (Ubuntu) "gksu's and gksudo's modal password prompt prevents OnBoard's virtual keyboard input, causing accessibility issues" [High,New]
[15:47] <ogra_> Tassadar, https://bugs.launchpad.net/ubuntu-nexus7/+bug/421660/comments/10
[15:48] <Tassadar> okay
[15:49] <ogra_> so if its actually gksudo it would be good to find out which component uses it and file a bug against it
[15:57] <wookey> OK. sbuild --host arm64 now works with raring + my raring-bootstrap. :-) I'll run a build and see how much breakage we have left
[16:42] <marvin24> ogra_: seems changing the distro in changelog is not enough, do I also need to bump the package version?
[16:42] <ogra_> hmm. you shouldnt need to
[16:47] <marvin24> dput says: "Package has already been uploaded to ppa on ppa.launchpad.net"
[16:47] <marvin24> the source.changes shows different distributions
[16:47] <ogra_> ypou need to remove the local .upload file :)
[16:57] <ogra_> xnox, so ayan would like to work on the usb-creator installation bits ...
[16:57] <xnox> \o/ ok =)
[16:57] <ogra_> :)
[16:58] <ogra_> ayan, if you run into any issues dont hesitate to ask here ;)
[16:58] <xnox> I can help. I should make usb-creator trunk to be usable. But then new bits can be added.
[17:15] <ayan> ogra_: will do.
[17:33] <xnox> ayan: it's fairly nice architecture: sepearate frontends & backends. I guess nexus7 images should be as a new backend & then the UI can be hooked up to it.
[17:39] <xnox> which reminds me about udisks2 port
[17:42] <ayan> xnox: ya, maybe this is a good time to port usb-creator to udisks2?
[17:47] <xnox> it's long overdue. usb-creator is the last package to use udisks1 on the desktop cd, everything else was ported already.
[17:47]  * ayan nods.
[17:47] <ayan> i took a brief look at it a while ago.
[17:47] <ayan> if you don't mind, i can take a stab at it today.
[17:49] <Jef91> For the Ubuntu nexus7 image, to suspend the device does it just use pm-utils, pm-suspend function or something custom for the device?
[18:09] <morphis> Jef91: it should use pm-utils as far as I know the N7 provides the common kernel interfaces for suspend
[18:09] <Jef91> kk morphis thanks
[19:10] <Jef91> hrmm I have audio working at startup on my nexus 7
[19:11] <Jef91> without doing a suspend/resume dance
[19:11] <Jef91> now I just need to figure out how I accomplished this
[19:16] <Ethernin> nice yer here too
[19:16] <Ethernin> lol
[19:17] <Ethernin> Hey you ubuntu-arm wizard devs, trying to install Jef91 custom image he made (dope btw u should check it out) and having the same issue trying to install the old image on a 32gb with 3g Nexus7
[19:55] <ayan> afk.
=== XorA|gone is now known as XorA
=== Noskcaj is now known as Noskcaj_afk
=== Noskcaj_afk is now known as Noskcaj
=== Noskcaj is now known as Noskcaj_afk
[21:59] <wbf> hello!
[21:59] <wbf> I've been having this error: http://paste.ubuntu.com/1514650/
[22:00] <wbf> and I've been wondering how to fix it.
[22:00] <wbf> trying to compile the pegasus driver for ARM
=== Jef91 is now known as Jef91|Out
