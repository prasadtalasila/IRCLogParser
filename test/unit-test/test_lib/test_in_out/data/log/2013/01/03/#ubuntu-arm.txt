[01:11] <SailorMoon> Will the ubuntu phone be just another OS? Will it have its own apps, or will anything open source from the Ubuntu Software Center run on it, such as OpenJDK (Minecraft?) or Gnome?
[01:22] <infinity> SailorMoon: It's still Ubuntu under the hood.
[01:29] <Ethernin> infinity, gestures that work?
[01:35] <SailorMoon> Any plan to use the System partition of an Android device?
[01:50] <Tassadar> SailorMoon: what would you use it for?
[02:05] <SailorMoon> I wouldnt know, im a noob. But it seems like wasted space, expecially on a device like the Nexus 7 where its like 700MB
[02:06] <SailorMoon> maybe some sort of backup or install partition to recover from if ubuntu explodes :3
=== rsalveti_ is now known as rsalveti
[03:36] <Jef91> Are the latest linux-nexus7 kernel sources that the Ubuntu 13.04 images here -> https://launchpad.net/~ubuntu-nexus7/+archive/ppa/+packages
[03:36] <Jef91> or are there newer debian sources for that package hiding somewhere?
[03:41] <Jef91> found it -> https://launchpad.net/ubuntu/+source/linux-nexus7/3.1.10-8.19
[04:03] <logicbuffer> Has there been much activity here in development for the Samsung Chromebook?
[04:04] <SmallFry> What sort of Dec? I thought it was working well on the chrimebooks
[04:04] <SmallFry> Dev*
[04:06] <logicbuffer> It's working decently well out of the box. Still needs some work as far as touchpad drivers go, and I don't think hardware video acceleration is working at all yet.
[04:06] <SailorMoon> is Ubuntu Phone going to install like an android rom? will there be individual roms per phone, or will there be one universal installer? lol
[04:06] <logicbuffer> We'll know in a few weeks when they release the first builds for the Galaxy Nexus
[04:07] <SailorMoon> i dont have any devices that will be suported, unfortunetly.
[04:07] <logicbuffer> Lack of hardware acceleration makes Unity a bit of a cramp.
[04:07] <SailorMoon> If theyd include the Nexus 7, i'd be good. lol
[04:08] <SailorMoon> its pretty much my only device that meets hardware requirements.
[04:08] <logicbuffer> Well I know they used the Galaxy Nexus as the demo phone.
[04:08] <logicbuffer> Luckily I had the foresight to buy one last year.
[04:09] <SailorMoon> i wanted to
[04:09] <logicbuffer> Assuming source is released reasonably quickly after the first build is released, I'm assuming that 3rd party development for Ubuntu Phone will take off pretty quick.
[04:09] <logicbuffer> Hoping anyway
[04:09] <SailorMoon> But i was broke at the time
[04:10] <SailorMoon> and now its not worth buying anymore
[04:10] <logicbuffer> It'd be awesome to have nightly builds up by a bunch of people just like Cyanogenmod & AOKP etc.
[04:10] <logicbuffer> Yeah it's pretty much pointless to buy one now.
[04:10] <logicbuffer> The Nexus 4 is superior in every way
[04:10] <SmallFry> The GNex?
[04:11] <SmallFry> Cheaper and Samsung.
[04:11] <SmallFry> I prefer Samsung to LG, but that's me
[04:11] <logicbuffer> True enough.
[04:11] <SmallFry> But specs... duh spezs
[04:12] <logicbuffer> A lot of people who bought the Retina Macbooks prefer Samsung to LG too, judging by the amount of complaints of display burn-in on the LG models.
[04:12] <SmallFry> Heh
[04:12] <logicbuffer> There's some burn-in on the GNex that has been with it since the first week I've had it but I'm not sure about the N4. I think it's had its fair share of issues that way too.
[04:12] <SmallFry> Did you hear about the iTheft in France?
[04:13] <logicbuffer> Saw something about it but didn't click any links or read more.
[04:14] <SmallFry> 1.3 million in product stolen. Which is what...2 macbooks and an iPhone?
[04:14] <SmallFry> I LoLd despite how bad it is
[04:15] <Jef91> logicbuffer: my samsung works well with the trackpad
[04:15] <Jef91> after setting somethings in the xorg settings
[04:15] <logicbuffer> I'll look into that then, I don't remember seeing anything about xorg settings in any of the threads I've read but who knows
[04:16] <Jef91> logicbuffer: let me find it
[04:16] <SmallFry> Xorg is nice... very nice for thing like macros etc too right?
[04:16] <Jef91> logicbuffer: -> http://forums.bodhilinux.com/index.php?/topic/7330-fix-touchpad-on-alpha-image/
[04:16] <logicbuffer> Did you use the script that downloads all the tarball pieces and unpacks them to the stateful partition?
[04:16] <logicbuffer> Or some other way of getting Ubuntu on?
[04:17] <Jef91> logicbuffer: I use a debian based system on my device.
[04:17] <SmallFry> Could you not pick at the script and install any ARM Linux?
[04:18] <SmallFry> And did you upgrade your ssd jef91
[04:18] <logicbuffer> Probably could, I didn't bother to even look into it
[04:18] <Jef91> I did not SmallFry
[04:18] <Jef91> still using the stock one
[04:18] <Jef91> 9GB for my OS is more than enough
[04:18] <logicbuffer> I thought the ssd was soldered to the motherboard?
[04:18] <SmallFry> Mar
[04:18] <SmallFry> Mar
[04:18] <SmallFry> Bah
[04:18] <SmallFry> Nay
[04:19] <SmallFry> Its an MSATA iirc
[04:19] <logicbuffer> Hmm
[04:19] <SmallFry> Maybe though. Idk
[04:20] <SmallFry> Ifixit has a teardown most likely
[04:20] <SmallFry> I'm sick and don't want to crawl to my rig though
[04:23] <logicbuffer> Newegg has a 32gb Crucial M4 mSATA drive for $55 w/ free shipping. Not sure if want...
[04:25] <SmallFry> More than a dollar a gig. Ugh
[04:25] <SmallFry> Check before you order it though, I could be delusional
[04:25] <logicbuffer> Yeah I'm not going to spring for it just yet.
[04:26] <SmallFry> Having the flu messes with your mind, I tell ya
[04:29] <logicbuffer> hhmm
[04:29] <logicbuffer> Jef91: how's the memory usage with bodhi? i haven't used enlightenment since the early elive days
[04:30] <Jef91> generally sub 100MB logicbuffer
[04:30] <SmallFry> Gnite logicbuffer and jef91, hope to chat again.
[04:30] <Jef91> under 150MB with compositing
[04:31] <logicbuffer> SmallFry: take care, i'll be here much more often now
[04:31] <SmallFry> Cool:) most activity I've seen in here
[04:31] <logicbuffer> Jef91: if so that's incredible, this is using 1.34gb at the moment
[04:35] <Jef91> ha unity just eats memory logicbuffer
[04:35] <logicbuffer> truth
[04:35] <logicbuffer> i think i'll go run that script instead and then come back here
[04:42] <SmallFry> Rockbox?
[04:42] <SmallFry> I haven't seen devs from them in ages
[04:50] <logicbuffer> SmallFry: So much for sleep
[05:01] <raster> logicbuffer: beware how you measure memory usage
[05:01] <raster> 1.3gb of actual memory used
[05:01] <raster> or that INCLUDEs caches/buffers?
[05:11] <logicbuffer> raster: http://i.imgur.com/7rPKa.png d
[05:12] <logicbuffer> i'm not very familiar with top but 1.3g used should mean total ram used, no?
[05:12] <raster> logicbuffer: ok - so its more like 500m used
[05:12] <raster> almost 700k is caches and another 75 buffers
[05:12] <Jef91> logicbuffer:  -> http://www.linuxatemyram.com/
[05:12] <raster> so under 600
[05:12] <raster> think of it this way
[05:13] <raster> cache is where linux stored data you load from disk
[05:13] <raster> if you opened a 200m video file
[05:13] <raster> and plqyed it
[05:13] <raster> 200m of ram will be used
[05:13] <raster> even if the process that played the video has exited and gone
[05:13] <raster> as the kernel will have loaded and CACHED that data into memory
[05:13] <raster> just in case its needed again
[05:13] <raster> even if the app onlyuses 10mb at any time
[05:13] <raster> and is walking thru the video stream decoding some of it into ram/buffers
[05:14] <raster> (yes - i'm ignoring the kernel fadvize calls etc. - i'm keeping it simple)
[05:14] <logicbuffer> isn't caching to disk a horrible idea on ssds though?
[05:14] <raster> if u copy 500m of photos from your sd card to your ~/Photos folder
[05:14] <logicbuffer> especially relatively large caches on disks that are already pretty small?
[05:14] <raster> those 500m of photos will live in cache
[05:15] <raster> umm
[05:15] <raster> caching is never a horrible idea
[05:15] <raster> ram is faster than an ssd
[05:15] <raster> (i know of no cases where it is not - and even though i can imagine some bizarre ones... they are truly bizarre)
[05:15] <raster> so having daat sit in ram that is currently unused is good
[05:15] <raster> its using ram
[05:16] <raster> that would otherwise go unused
[05:16] <raster> unused ram is the tool of the devil
[05:16] <raster> unused ram is useless ram
[05:17] <raster> (ok - i simplified again - yes. ram costs power for self-refresh and being able to turn it off and turn off self-refresh can save you some power drain. as such no linux setup "does this" (in any normal case))
[05:17] <logicbuffer> i'm sorry, i was confusing it with swap
[05:18] <logicbuffer> actually it says swap ~700m cached
[05:19] <logicbuffer> does that not mean it's holding 700m of something in a file on the SSD and not in ram?
[05:20] <raster> thats not swap
[05:20] <raster> thats cache
[05:20] <raster> u are using no swap
[05:20] <raster> its misleading that tis onthe line with "swap"
[05:21] <logicbuffer> yeah alright i understand now
[05:21] <raster> so ubuntu isnt AS BAD as u are thinking
[05:21] <raster> u're being a bit too harsh on it
[05:21] <logicbuffer> so i'm truly only using about 500m but it's holding another 700ish in memory in case it needs to use it
[05:21] <raster> what Jef91 os statitng is the actual ram usage
[05:21] <raster> ie memory excluding disk cache/buffers
[05:21] <raster> measuring memory is a "fine art"
[05:21] <raster> ina  virtual memory os setup its hard
[05:22] <raster> one of the best measurements u can get is "free"
[05:22] <raster> do this:
[05:22] <raster> free -m
[05:22] <Jef91> Yea.
[05:22] <Jef91> Unity is normally just over 500MB at startup.
[05:22] <Jef91> So 3-5 times as much as E17
[05:23] <raster>  2:22PM ~ > free -m
[05:23] <raster>              total       used       free     shared    buffers     cached
[05:23] <raster> Mem:          2939       2228        711          0        119       1858
[05:23] <raster> -/+ buffers/cache:        250       2689
[05:23] <raster> Swap:         1905         61       1844
[05:23] <raster> the numebr that matters is that "250" number
[05:23] <raster> thats your memory used on the os/syst4em as a whole
[05:23] <raster> excluding what is swapped out, what is cached or in buffers
[05:24] <raster> that is about the most accurate number you have to measure system meory usage
[05:24] <logicbuffer> okay i see
[05:24] <logicbuffer> sounds good
[05:24] <raster> so the best way to measure gnome vs kde vs unity vs e17 for example
[05:24] <raster> is boot a system and have them all boot to the same point
[05:25] <raster> eg a bare xserver
[05:25] <raster> no wm or anything
[05:25] <raster> no login manager
[05:25] <raster> now measure "free"
[05:25] <raster> that "used -/+ buffers/cache" is the memory you MUST HAVE to run what u have running now
[05:26] <raster> any memory in addition to that is luxury "caching" memory or memory for added apps or utilities on top
[05:26] <raster> NOW u run the desktop of choice
[05:26] <raster> unity/gnome/kde/e17/xfce/whatever
[05:26] <raster> then meausure again
[05:26] <raster> free
[05:26] <raster> that number will have gone up
[05:26] <raster> the mount it has gone up by is the "cost" of that desktop in addition to your base os
[05:27] <raster> thasts the fairest way to measure desktops/wm's against eachother
[05:27] <raster> and of coruse then run specific apps
[05:27] <logicbuffer> seems like they could've made it slightly more intuitive in top
[05:27] <raster> or perform specific tasks
[05:27] <logicbuffer> yeah
[05:27] <raster> eg open browser, go to a fixed webpage
[05:27] <raster> etc.
[05:27] <raster> and then measure as u go
[05:27] <raster> and see where that number goes
[05:27] <raster> that's how you are "fair" in measuring
[05:28] <raster> top/ps are useless for a regular user in terms of telling u actual mem usage
[05:28] <raster> there is 1 tool i know of that makes a "good attempt" to give you a fair memory rating
[05:28] <raster> its called "smem"
[05:28] <raster> therss a pkg for it
[05:28] <raster> apt-get install smem
[05:28] <raster> its a python tool
[05:28] <raster> if u do it as root u can get full details
[05:28] <raster> sudo smem -t
[05:29] <raster> and it'll list processes and TRY and allocate a FAIR share of memory to them
[05:29] <raster> it accounts for sharing of resources - eg libc, code pages etc.
[05:29] <raster> every process shares the same libc
[05:29] <raster> so memory used by libc CODE is in memory only once
[05:29] <raster> across ALL processes u run
[05:30] <raster> so it figures out the reference counts on these pages and divides by how many processes use them
[05:30] <raster> etc.
[05:30] <raster> so they are allocated their fair share
[05:30] <raster> the PSS column is the "fair share" amount
[05:30] <raster> its not perfectly accurate
[05:30] <raster> but as close as u'll get
[05:30] <raster> again - measuring the os as a whole with free is probably the most fair and best way
[05:31] <raster> so when Jef91  is saynig 100-150m
[05:31] <raster> he's saying the "free" number
[05:31] <raster> minus buffers and cache
[05:31] <raster> note
[05:31] <raster> that the amount of memory needed can be wildly different depending on gpu and gl driver stack
[05:31] <logicbuffer> good to know
[05:32] <raster> its an artifact of the driver itself
[05:32] <raster> so hsi numbers and yours may not match if u have different gpus/drivers/versions of driver or even different resolutions of screen
[05:32] <logicbuffer> yeah since data is moved from ram to kernel to gpu and back and then again to framebuffer, no?
[05:33] <raster> depends on architecture
[05:33] <raster> integrated gpus have no framebuffer
[05:33] <raster> well no dedicated one
[05:33] <raster> its part of main memory
[05:33] <raster> they dont need to move memory around
[05:33] <raster> discrete gpus do
[05:33] <raster> they may come with 256m or 512m or 1gb or more of dedicated memory on the gfx card in addition to system memory
[05:34] <raster> anyway. i've done my "measuring memory" rant for the month... :) hope it helps - spend some time reading up on it and experimenting and seeing
[05:35] <raster> and then when u see the usual misinformation spread as people quote the wrong numbers... spread the word.
[05:35] <logicbuffer> interesting
[05:35] <logicbuffer> looks like the mali t604 renders graphics into memory and then passes it from there to another gpu core that handles display
[05:35] <raster> its an integrated gpu
[05:35] <raster> its texture data, frameubuffer etc live in system ram
[05:36] <raster> the gpu has a CACHE on board
[05:36] <raster> like the cpu
[05:36] <raster> l1/l2/l3 etc.
[05:36] <raster> so it'll read data form ram just like your cpu and keep it in a cache
[05:37] <raster> if it needs the same data it pulls it from its cache, not from ram - just like your cpu.
[05:41] <logicbuffer> well this was enlightening
[05:41] <logicbuffer> thanks haha
[05:42] <raster> enlightenment is what i do
[05:42] <raster> :)
[05:42] <raster> pun intended :)
[05:44] <logicbuffer> should've seen that coming
[05:45] <raster> ;]
[10:22] <ogra_> happy new year everyone !
[10:22] <raster> hny :)
[10:23]  * ogra_ is wading through backlogs for the last 3 weeks  and through >3000 mails 
[10:24] <raster> oh ugh
[10:24] <raster> holidays?
[10:24] <ogra_> yeah, gotta love them :P
[10:26] <raster> i'm starting to be of the opinion that email is overrated
[10:26] <raster> and all discussion/work should be done via irc
[10:26] <raster> if u arent there - u miss it
[10:26] <raster> but thats cool
[10:26] <raster> u dont end up with backlogs out the wazoo
[10:26] <raster> :)
=== doko_ is now known as doko
[12:11] <tnelson> Can Pandaboards be PXE booted?
[12:15] <hrw> tnelson: you can boot panda from sd or usb
=== yofel_ is now known as yofel
[12:32] <ogra_> tnelson, yeas, our u-boot supports PXE since 12.04
[12:33] <ogra_> (it defaults to it if there is no configuration found)
[12:38] <hrw> but first you have to provide uboot...
[12:40] <ogra_> right, you need an SD with u-boot or set up usbboot via OTG
[12:57]  * ogra_ hugs infinity ... thx for that flash-kernel SRU, somehow i missed it 
[13:15] <tnelson> Ah, so, 'Das U-Boot' is to embedded devices what grub is to x86?
=== Quintasan_ is now known as Quintasan
[13:17] <ogra_> tnelson, well, its a bootloader, thats what grub and u=boot have in common :)
[13:18] <lilstevie> I wouldn't go much further than that though :p
[13:23] <tnelson> So, I'm looking at http://omappedia.org/wiki/Minimal-FS_SD_Configuration versus https://wiki.ubuntu.com/ARM/Server/Install?action=show&redirect=ARM%2FOMAPHeadlessInstall...
[13:24] <tnelson> The zcat | dd approach would leave me with one pre-sized partition, no?
[13:24] <tnelson> (I've got a 32GB SD card.)
[13:31] <tnelson> Although I've got a 2GB usb stick, presumably I can dd onto that, then install onto the sd card?
[13:59] <ogra_> tnelson, nope
[13:59] <ogra_> SD needs to be the source device
[16:59] <Jef91> So I'm trying to compile to nexus 7 kernel found here -> https://launchpad.net/ubuntu/+source/linux-nexus7/3.1.10-8.19 , but towards the end of the compile the build always fails for me with this error message -> http://paste.debian.net/221410/
[16:59] <Jef91> What am I doing wrong?
[17:09] <ogra_> Jef91, how do you build it ?
[17:14] <Jef91> ogra_ untared the sources, CDed into the directory and ran:
[17:14] <Jef91> dpkg-buildpackage -b
[17:15] <ogra_> on an arm machine ?
[17:16] <Jef91> Yes ogra_
[17:16] <ogra_> did you install the build-deps ?
[17:17] <Jef91> Yes ogra_ ... If it was missing build deps dpkg-buildpackage would not have let it start compiling
[17:18] <ogra_> hmm, strange
[17:23] <Jef91> The error hints to me at a syntax error with the control file
[17:23] <Jef91> but I honestly don't know exact what that might be after looking at the file
[17:25] <ogra_> the control file is created during the build process, so its a bit weird, i would bet you have another error further above in your build
[17:25] <ogra_> (the guys in #ubuntu-kernel might know more btw)
[17:27] <Jef91> good call, thanks ogra_
[17:27] <Jef91> thanks ogra_
[17:27] <ogra_> np :)
=== tdc_ is now known as tdc
