=== slank is now known as slank_away
[08:16] <mgz> morning!
=== mmrazik is now known as mmrazik|lunch
=== yofel_ is now known as yofel
[10:55] <solancer> hi guys
[10:55] <solancer> how can I fork a PPA from launchpad and upload it to my personal Archive ?
[10:57] <mgrandi> uhh
[10:57] <mgrandi> bzr clone lp:whatever
[10:57] <mgrandi> bzr push somewhere
[10:59] <solancer> oops i did this instead
[10:59] <solancer> bzr branch lp:unity
[11:00] <solancer> it grabbed all the folders and stuff
[11:00] <solancer> but I need to change the name as well
[11:00] <mgz> same thing.
[11:00] <solancer> so if I've understood correctly
[11:00] <solancer> I've cloned the unity repository
[11:01] <solancer> and now its ready for me make changes and push to my personal PPA
[11:01] <mgrandi> RoR isn't having a good week
[11:02] <solancer> what does upstream merge mean ?
[11:02] <solancer> I've seen that on unity-revamped PPA
[11:04] <mgz> solancer: what you want to do requires a reasonable understanding of development and debian packaging, you probably want to start with just getting a change done locally and working for you
[11:06] <solancer> mgz, so what do i need to learn first
[11:07] <solancer> I've used git in the past for creating repos on github
[11:09] <mgz> solancer: well, you have a local copy of unity, I'd start by changing that and getting it working for you, ask in #ubuntu what channel unity devs hang out it
[11:09] <solancer> mgz, cool
[11:09] <mgz> they should then be able to give you hints about what recipes they use for their ppa and such like
[11:10] <solancer> mgz, but I don't want to  install it on my local machine that would break packages
[11:10] <solancer> mgz, but I can install it on my V-box machines
[11:11] <solancer> anyway I can build deb file and install it on the v-box machine
[11:11] <solancer> #unity
=== mmrazik|lunch is now known as mmrazik
[13:56] <gmarkall> if i cherrypick a couple of revisions from a branch, with the intention of later merging that picked-from branch into the current branch, am I likely to encounter any problems in the future? Or is this a relatively safe thing to do?
[13:57] <mgz> it's reasonably safe.
[13:57] <gmarkall> many thanks
=== mmrazik is now known as mmrazik|afk
[13:58] <mgz> not great as a core part of your workflow though, as it's nice to keep the revision details for the first time code is merged, and avoid potential conflict pain
[14:00] <mgz> but for ocassional things, it mostly works fine because bzr can genreally figure out (or give you a reasonable conflict) if a diff gets applied twice
[14:00] <gmarkall> i need to get a critical fix that's just been applied to the branch i'm picking from, but i don't have time to merge the whole branch right now - there's been some big changes in the picked-from branch since i last merged. is cherrypick the way to go in this situation?
[14:01] <mgz> right, that exactly the kind of situation where it's the right thing to do
[14:02] <gmarkall> ah, great - thanks :-)
=== mmrazik|afk is now known as mmrazik
=== slank_away is now known as slank
=== mbarnett` is now known as mbarnett
=== slank is now known as slank_away
=== slank_away is now known as slank
=== slank is now known as slank_away
=== slank_away is now known as slank
=== slank is now known as slank_away
=== deryck is now known as deryck[lunch]
=== slank_away is now known as slank
=== deryck[lunch] is now known as deryck
=== slank is now known as slank_away
[20:08] <Sonti> hi guys I have a quick question about bazaar. I want to use it locally and I'm not too sure about what to select in location when initialising. Do I set it inside the folder where my project is or do I set it up somewhere else (e.g c:\) and then add the project folder?
[20:11] <LarstiQ> Sonti: the former
[20:12] <LarstiQ> Sonti: so in commandline parlance, `cd project; bzr init`
[20:13] <Sonti> ok thanks. My concern is that I have multiple projects under one folder ie MyProjects. Should I set it in there or MyProjects\projectxxx. I like the idea of having one version control for all of them at once in case I go back to one of my old prototypes but I'm just not sure if I should do it individually for each project folder instead.
[20:14] <LarstiQ> Sonti: well, you can do it in various ways of course. I'd recommend doing it per project though.
[20:15] <LarstiQ> Sonti: operations are tree wide
[20:16] <LarstiQ> Sonti: you can try it out, and if you don't like it do it differently
[20:16] <Sonti> LarstiQ thanks. I guess it would be neater per project. I'll do that.
=== slank_away is now known as slank
=== slank is now known as slank_away
=== slank_away is now known as slank
=== slank is now known as slank_away
